# cd-bookmark - zsh plugin to bookmark directories to cd.
#
# Copyright (c) 2014 Hideaki Miyake
# Licensed under the MIT License (MIT)
#
# Author : Hideaki Miyake (https://github.com/mollifier)
# URL : https://github.com/mollifier/cd-bookmark
#
# How to set up
#   Put cd-bookmark and _cd-bookmark files somewhere in your $fpath
#   and add this line to your .zshrc:
#
#     autoload -Uz cd-bookmark
#
# Usage:
#   cd-bookmark [PATH]
#

typeset -r CD_BOOKMARK_FILE=~/.cdbookmark

function print_usage()
{
    cat << EOF
Usage: cd-bookmark [PATH]

  -c cd
  -e edit
  -h           display this help and exit
EOF
}

function print_error()
{
    echo "cd-bookmark: $@" 1>&2
    echo "Try \`-h' option for more information." 1>&2
}

function edit_bookmark() {
  # open CD_BOOKMARK_FILE with EDITOR.
  ${EDITOR:-vi} "$CD_BOOKMARK_FILE"
}

function list_bookmark() {
  cat "$CD_BOOKMARK_FILE" | sort -n
}

function list_bookmark_path() {
  cat "$CD_BOOKMARK_FILE" | cut -d '|' -f 2
}

function list_bookmark_id() {
  cat "$CD_BOOKMARK_FILE" | cut -d '|' -f 1
}

function get_bookmark() {
  escaped_bmid=$(echo "$1" | sed -e 's/[^a-zA-Z0-9<>]/\\&/g')
  cat "$CD_BOOKMARK_FILE" | grep -E "^${escaped_bmid}\\|" | cut -d '|' -f 2 | head -n 1
}

function add_to_bookmark() {
  local bmdir=$PWD
  local newid=$1

  if list_bookmark_path | grep -F -x "$bmdir" > /dev/null; then
    echo "$bmdir is already in bm list" 1>&2
    return 2
  fi

  if [ -n "$newid" ]; then
    if list_bookmark_id | grep -F -x "$newid" > /dev/null; then
      echo "$newid is already used as bm id" 1>&2
      return 3
    fi
  fi

  if [ -z $newid ]; then
    local maxid
    maxid=$(list_bookmark_id | grep '^[0-9][0-9]*$' | sort -n -r | head -1)
    if [ -n "$maxid" ] && [ "$maxid" -ge 1 ]; then
      newid=$((maxid + 1))
    else
      newid=1
    fi
  fi

  echo "$newid|$bmdir" >> "$CD_BOOKMARK_FILE"
}
# main function
function cdbookmark() {

  while getopts ':h' option; do
    case $option in
      h)
        print_usage
        return 0
        ;;
      :)
        print_error "option requires an argument -- $OPTARG"
        return 1
        ;;
      *)
        print_error "invalid option -- $OPTARG"
        return 1
        ;;
    esac
  done
  shift $(expr $OPTIND - 1)

  local bmid=$1
  if [ -z "$bmid" ]; then
    list_bookmark
    return
  fi

  local bmdir=$(get_bookmark "$bmid")
  if [ -z "$bmdir" ]; then
    echo "$bmid is not in bm list" 1>&2
    return 1
  fi

  cd "$bmdir"
}

cdbookmark "$@"

# vim:set ft=zsh:
